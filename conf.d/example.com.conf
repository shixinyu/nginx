upstream tomcat_server {
        server ip:port;
        server domain:port;
}
upstream app_server {
        server ip:port;
        server domain:port;
}

#Example configuration for TOMCAT reverse proxy
server {
        listen       80;
        listen       443 ssl;
        ssl_certificate /opt/tools/cert/example.com.crt;
        ssl_certificate_key /opt/tools/cert/example.com.key;
        server_name  example.com;
        access_log  logs/example.com_access.log  main;
        error_log   logs/example.com_error.log;
        if ($scheme = http) {
           return 307 https://$server_name$request_uri;
        }
        location / {
            proxy_next_upstream http_502 http_504 error timeout invalid_header;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_pass http://backendservers;
            if ($http_user_agent ~ (Baiduspider|Sogou|Python-urllib|Googlebot)) {
            return 403;
            }
      }
      location /nginx-status {
            stub_status on;
            access_log  off;
            error_log off;
            allow 127.0.0.1;
#            deny all;
        }
    }

#Example configuration for Ruby&Python:
server {
        listen       80;
        listen       443 ssl;
        ssl_certificate /opt/tools/certs/example.com.pem;
        ssl_certificate_key /opt/tools/certs/example.com.key;
        server_name  example.com;
        access_log  logs/example.com_access.log  main;
        error_log   logs/example.com_error.log;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT';
        add_header 'Access-Control-Allow-Headers' 'x-request-with,Content-Type';
        if ($scheme = http) {
           return 307 https://$server_name$request_uri;
        }
        location / {
            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off;
            if ($http_user_agent ~ (Baiduspider|Sogou|Python-urllib|Googlebot)) {
            return 403;
            }
        }

 }

#Example configuration for NodeJS
   server {
	listen       80;
            server_name  example.com.;
            access_log  logs/example.com._access.log  main;
            error_log   logs/example.com._error.log;
            location / {
            proxy_pass http://127.0.0.1:3210;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_buffering off;
            if ($http_user_agent ~ (Baiduspider|Sogou|Python-urllib|Googlebot)) {
            return 403;
            }
        }

  }